DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS compilations_events CASCADE;
DROP TABLE IF EXISTS locations CASCADE;
DROP TABLE IF EXISTS comments CASCADE;

CREATE TABLE IF NOT EXISTS categories (
  category_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(50) NOT NULL,
  CONSTRAINT pk_category PRIMARY KEY (category_id),
  CONSTRAINT uq_categories_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS users (
  user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(250) NOT NULL,
  email VARCHAR(254) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (user_id),
  CONSTRAINT uq_user_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS locations (
location_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
lat FLOAT NOT NULL,
lon FLOAT NOT NULL,
CONSTRAINT pk_location PRIMARY KEY (location_id)
);

CREATE TABLE IF NOT EXISTS events (
event_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
annotation VARCHAR(2000) NOT NULL,
category_id BIGINT NOT NULL,
confirmed_requests INT NOT NULL,
description VARCHAR(7000) NOT NULL,
event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
published_on TIMESTAMP WITHOUT TIME ZONE,
user_id BIGINT NOT NULL,
location_id BIGINT,
paid BOOL,
participant_limit INT,
request_moderation BOOL,
title VARCHAR(120) NOT NULL,
state VARCHAR(20) NOT NULL,
views BIGINT,
CONSTRAINT pk_event PRIMARY KEY (event_id),
CONSTRAINT fk_events_to_categories FOREIGN KEY(category_id) REFERENCES categories(category_id) ON DELETE RESTRICT,
CONSTRAINT fk_events_to_users FOREIGN KEY(user_id) REFERENCES users(user_id) ON DELETE CASCADE,
CONSTRAINT fk_events_to_locations FOREIGN KEY(location_id) REFERENCES locations(location_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS requests (
request_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
event_id BIGINT NOT NULL,
requester_id BIGINT NOT NULL,
status VARCHAR(20) NOT NULL,
created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
CONSTRAINT pk_request PRIMARY KEY (request_id),
CONSTRAINT fk_requests_to_users FOREIGN KEY(requester_id) REFERENCES users(user_id) ON DELETE CASCADE,
CONSTRAINT fk_requests_to_events FOREIGN KEY(event_id) REFERENCES events(event_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilations (
compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
pinned BOOL NOT NULL,
title VARCHAR(50) NOT NULL,
CONSTRAINT pk_compilation PRIMARY KEY (compilation_id)
);

CREATE TABLE IF NOT EXISTS compilations_events (
compilation_id BIGINT NOT NULL,
event_id BIGINT,
CONSTRAINT fk_compevents_to_compilations FOREIGN KEY(compilation_id) REFERENCES compilations(compilation_id) ON DELETE CASCADE,
CONSTRAINT fk_compevents_to_events FOREIGN KEY(event_id) REFERENCES events(event_id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS comments (
comment_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
author_id BIGINT NOT NULL,
event_id BIGINT NOT NULL,
text VARCHAR(255) NOT NULL,
created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
updated TIMESTAMP WITHOUT TIME ZONE NOT NULL,
parent_id BIGINT,
CONSTRAINT pk_comment PRIMARY KEY (comment_id),
CONSTRAINT fk_comments_to_users FOREIGN KEY (author_id) REFERENCES users (user_id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT fk_comments_to_events FOREIGN KEY (event_id) REFERENCES events (event_id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT fk_comments_to_comments FOREIGN KEY (parent_id) REFERENCES comments (comment_id) ON DELETE CASCADE ON UPDATE CASCADE
);
